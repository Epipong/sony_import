#!/bin/bash

# Help
Help() {
    echo "iem <command>

Usage:

iem -s <foo>    set the source path
iem -t <foo>    set the target path
iem -h          display usage info for all commands
"
}

if [ -f ".env" ]; then
    source .env
else
    echo ".env not found!"
    exit 0
fi

while getopts :s:t:h: option; do
    case $option in
        s) # source path
            SOURCE_PATH=$OPTARG;;
        t) # target path
            TARGET_PATH=$OPTARG;;
        h) # display Help
            Help
            exit;;
        \?) # Invalid option
            echo "unknown command: \"$OPTARG\"

To see a list of supported iem commands, run:
  iem -h"
            exit;;
    esac
done

pics=0
vids=0

import_files() {
    DIR_PATH=$1
    EXT=$2
    nfile=4
    files=$(ls $SOURCE_PATH/$DIR_PATH/*/*.$EXT)
    max=$(echo $files | wc -w)
    maxl=$(($(echo $max | wc -c)-1))

    if [ "$2" == "MP4" ]; then
        vids=$max
        nfile=5
    elif [ "$2" == "JPG" ]; then
        pics=$max
    fi

    i=1

    for file_path in $files; do
        created=$(exiftool -d "%Y-%m-%d" -CreateDate -s3 "$file_path")

        # check if date directory exist
        if [ ! -d $TARGET_PATH/$created/$EXT ]; then
            mkdir -p $TARGET_PATH/$created/$EXT
            printf "\e[36m$TARGET_PATH/$created/$EXT\e[0m directory has been created\n"
        fi

        file=(${filepath//\// })
        filename=$(basename "$file_path")
        new_file_path=$TARGET_PATH/$created/$EXT/$filename

        # check if file exist and copy
        if [ ! -f $new_file_path ]; then
            cp -p $file_path $new_file_path
            printf "[%0${maxl}d/$max] \e[32m$filename\e[0m has been created\n" $i
        fi
        i=$((i+1))
    done
}

SECONDS=0
printf "start: \e[33m$(date +"%T")\e[0m\n"

# import_files DCIM JPG
import_files DCIM ARW
# import_files PRIVATE/M4ROOT MP4

duration=$SECONDS
printf "end: \e[33m$(date +"%T")\e[0m\n"
printf "\e[33m$((duration / 60))\e[0m minutes and \e[33m$((duration % 60))\e[0m seconds elapsed.\n"

echo
printf "images imported: $pics\n"
printf "videos imported: $vids\n"
